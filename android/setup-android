#!/usr/bin/env bash

# This script sets up symbolic links to the Cinder source tree for use by the
# Android ndk-build script.  On Windows (cygwin) it requires the Junction
# tool to be installed and available in the path.
#
#   (http://technet.microsoft.com/en-us/sysinternals/bb896768)


function remove_old_links {
    rm -f jni/boost jni/include jni/src
}

function check_for_junction {
    hash junction 2>&-
    if [ $? -ne 0 ]; then
        echo "Error: this script requires junction.exe in your PATH variable."
        echo "  Verify your installation and try again"
        echo "  (http://technet.microsoft.com/en-us/sysinternals/bb896768)"
        exit
    fi
}

function unpack_freeimage {
    if [ ! -e setup/FreeImage/FreeImage3150.zip ]; then
        echo "Downloading FreeImage source distribution..."
        curl -O http://expandingbrain.com/cinder/FreeImage3150.zip
        mv FreeImage3150.zip setup/FreeImage
    fi
    echo "Setup FreeImage..."
    rm -rf jni/FreeImage
    unzip setup/FreeImage/FreeImage3150.zip -d jni
    cp -p setup/FreeImage/Android.mk jni/FreeImage
    cp -f setup/FreeImage/dcraw_common.cpp jni/FreeImage/Source/LibRawLite/internal/dcraw_common.cpp
    cp -f setup/FreeImage/tif_dirinfo.c jni/FreeImage/Source/LibTIFF/tif_dirinfo.c
}

OSNAME=`uname -o`
if [ $OSNAME = "Cygwin" ]; then
    check_for_junction
    remove_old_links
    junction jni\\boost ..\\boost && junction jni\\include ..\\include && junction jni\\src ..\\src
else
    remove_old_links
    ln -s $PWD/../boost jni/boost && ln -s $PWD/../include jni/include && ln -s $PWD/../src jni/src
fi

unpack_freeimage

if [ $? -ne 0 ]; then
    echo "Error creating Android tree, check your Cinder source layout."
else
    echo "Android source tree created, ready to run ndk-build"
fi

